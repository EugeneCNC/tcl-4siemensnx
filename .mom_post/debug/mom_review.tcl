#! /usr/local/bin/wish
###############################################################################
#
# DESCRIPTION
#
# This file contains the variables and procs that create an output file
# consisting of Variables, Addresses and Event names as they are set by
# NX/Post.
#
# The format of the output file is
#  A <name> = Address variables
#  V <name> = Variables
#  E <name> = Events
#  B <name> = MOM_before_output Event
#
# After this file is written to disk it will be read by a "wish" script that
# presents a dialog with a list of Events in the first listbox and Post output
# in the third listbox. When one of the event is selected from the first listbox
# it displays the settings for Variables and Addresses in the second listbox at
# the same time highligts and brings the output generated by that event to the
# top of the list in the third listbox.
#
# when a variable of an event is selected from the second listbox, it shows
# how the variable is changing in all the events. On selecting the output
# statement from the third listbox, it brings the event generating that
# output to the top of the list in the firstlistbox and displays the
# settings for variables and addresses in the second listbox.
#
# If this facility is desired then this file should be 'source'd into the
# desired TCL script.
#
# External Programs
#   mom_review_wish.tcl - the wish script to display output
#
##############################################################################
# REVISIONS
#   Date       Who              Reason
#   2/11/98    mjz              Created
#   2/11/98    mjz              Added a counter for the Event to assist in file
#                               seeks.
#   3/25/98    HW (UG-Colonge)  add  proc_data file
#   6/10/98    Naveen (Cypress) changed debug_data file to review_data file
#   6/12/98    Naveen (Cypress) add debug_data file
#   8/04/98    Naveen (Cypress) Fixed some problems
# 10-Jun-1999   whb     remove puts to stdout (NO stdout on NT)
# 13-Jul-1999   whb     correctly delete files using MOM_remove_file.
# 07/21/1999   MKG      adopt to the installed wish(my_wish).
# 02/19/2003   GSL      Restored from PB's version.
# 08/09/2005   gbs      Skip return variable check for review tool in ugwish
# 11/05/2008   gsl      Start review tool in background process
# 07/22/2009   gsl  PR6165649  Remove review_data & proc_data inside mom_review_wish.tcl
# 01/24/2011   gsl      Set default output directory to the part file's
#                       and display it in the title of review tool dialog
# 11/14/2011   gsl      "file writable..." command does not detect proper permision for a directory,
#                       try to open a file in the directory to detect the permission instead...
# 11/15/2011   gsl      Validate the existence of wish_script, my_wish and the success of the run
# 07/16/2012   gsl      Clean up mom_debug_err_file when not needed.
#=======
# nx851
#=======
# 11-06-2012   gsl  Exp with directing outputs to "${mom_output_file_directory}${mom_output_file_basename}"
#=======
# nx900
#=======
# 12-12-12     gsl  - Directing outputs of data files to "${mom_output_file_directory}"
#                   - "mom_debug_err.out" was "mom_debug_err_file".
#                   - Add use of global mom_debug_output_directory to reinforce the location for output data
#                   - Rewrote MOM_init_debug to determine the output destination
# 02-12-13     gsl  - Submitted to nx9 ip8
#========
# nx1847
#========
# Aug-10-2018 gsl - In nx1847, the 3rd field of mom_date may not be the time stamp.
#
#$HISTORY$
##############################################################################
# this sets the output file variable
# IT MUST BE SET THE SAME IN THE debug_listbox.tcl SCRIPT
#
  set file_all_offset1        0
  set review_file_all_offset1 0
  set seek_flag               0
  set review_seek_flag        0
  set mom_debug_file_all      ""
  set mom_debug_done_heading  0
  set mom_debug_event_num     0
  set debug_data  ""
  set review_data ""
  set proc_data   ""

  set DEBUG                   0

#
# This is the path to the wish script
#
  set wish_script "[MOM_ask_env_var UGII_CAM_DEBUG_DIR]mom_review_wish.tcl"
  if { ![file exists $wish_script] } \
  {
     MOM_output_to_listing_device "+++ NX/Post review tool cannot find script file $wish_script. +++"
     return
  }

 #<07-25-12 gsl> Differentiate platform
  if { [string match "*windows*" $tcl_platform(platform)] } \
  {
     set my_wish "[MOM_ask_env_var UGII_CAM_AUXILIARY_DIR]ugwish.exe"
  } else \
  {
     set my_wish "[MOM_ask_env_var UGII_CAM_AUXILIARY_DIR]ugwish"
  }

  if { ![file exists "$my_wish"] } \
  {
     MOM_output_to_listing_device "+++ NX/Post review tool cannot find \"$my_wish\". +++"
     return
  }


################################################################################
# proc: MOM_debug_do_heading
#
# Description:
#               This procedure outputs the header to a file
#
################################################################################
proc MOM__debug_do_heading {} \
{
   puts $mom_debug_file_all "Debug Output for TASK: $::mom_part_name"
   puts $mom_debug_file_all "Created By:    $::mom_logname"
   puts $mom_debug_file_all "Creation Date: $::mom_date"
   set aa [info tclversion]
   puts $mom_debug_file_all "tcl version: $aa"
   puts $mom_debug_file_all "==============================================="

   set ::mom_debug_done_heading 1
}

################################################################################
# proc: MOM_init_debug
#
# Description:
#   First proc called ... opens the output file
#
################################################################################
proc MOM_init_debug {} \
{

   global debug_data   ;# This controls where the output is written.
   global fileId       ;# This is the tag to write to.
   global mom_logname
   global mom_date
   global review_num
   global debug_num
   global mom_debug_file_all
   global mom_debug_done_heading
   global review_data
   global proc_data
   global mom_debug_err_file debug_err_file
   global DEBUG
   global mom_debug_output_directory
   global mom_output_file_directory


  #<11-14-2011 gsl> Correct error in detecting write permission...
  # Try to open the debug data file in the part's directory first;
  # if that fails, open file in the TMP directory, otherwise display error.

   set ::debug_err_file "mom_debug_err.out"

  #<12-12-12 gsl> Directing outputs to "$::{mom_output_file_directory}"
  # cd "[file dirname $mom_part_name]"
   if [catch { cd $::{mom_output_file_directory} }] \
   {
      cd "[MOM_ask_env_var UGII_TMP_DIR]"
   }


   if [catch { open "$::debug_err_file" w } ::mom_debug_err_file] \
   {
      cd "[MOM_ask_env_var UGII_TMP_DIR]"
      if [catch { open "$::debug_err_file" w } ::mom_debug_err_file] {

        # This should be an unforeseen case that temp dir can not be accessed!!!
         MOM_output_to_listing_device "+++ NX/Post review tool cannot open $::debug_err_file in either\
                                          \"$::{mom_output_file_directory}\" or UGII_TMP_DIR. +++"

        # It's all over!!!
         return
      }
   }

   # Save away working directory
   set ::mom_debug_output_directory [pwd]


   #<07-16-12 gsl> Cleanup error file (opened @ start) if not needed.
   if { !$::DEBUG } \
   { close $::mom_debug_err_file; MOM_remove_file "$::debug_err_file" }


   if { $::DEBUG } \
   {
      puts $::mom_debug_err_file "Debug output to directory: \"$::{mom_debug_output_directory}\""
      puts $::mom_debug_err_file "Entering MOM_init_debug" 
   }


   set ::review_num 0
   set ::debug_num 0

   #<Aug-09-2018 gsl> Find the correct time stamp field.
   foreach s [split $::mom_date] \
   {
      if { [string match "*:*" $s] } {
         set time_list [split [string trim $s] :]
         break
      }
   }
   foreach t $time_list \
   {
      append cur_time $t
   }

   # Prevent file name from getting duplicated
   if { [string length $::review_data] == 0 } \
   {
      append ::review_data $::mom_logname $cur_time _review .out
   }

   if [catch { open $::review_data w } ::fileId] \
   {
      if { $::DEBUG } { puts $::mom_debug_err_file "error opening the file $::review_data" }
   } else \
   {
      if { $::DEBUG } { puts $::mom_debug_err_file "mom_review.tcl: write $::review_data" }
   }

   if { [string length $::debug_data] == 0 } {
      append ::debug_data  $::mom_logname $cur_time _debug  .out
   }
   set ::mom_debug_file_all [open $::debug_data w]

   if { [string length $::proc_data] == 0 } {
      append ::proc_data   $::mom_logname $cur_time _proc   .out
   }

   set ::mom_debug_done_heading 0
}

################################################################################
#
# proc: MOM_before_each_event
#
# Description:
#  Output to the debug file the Event name
#
################################################################################
proc MOM_before_each_event {} \
{
   
   global fileId
   global mom_debug_event_name
   global review_num
   global debug_num
   global mom_debug_file_all
   global file_all_offset1
   global review_file_all_offset1
   global seek_flag
   global review_seek_flag
   global mom_debug_event_num
   global mom_debug_done_heading
   global mom_debug_err_file
   global DEBUG
   if { $DEBUG } { puts $mom_debug_err_file "Entering MOM_before_each_event: Event $mom_debug_event_name" }

   if { ![string match "MOM_before_motion" $mom_debug_event_name] } {

      set review_file_all_offset2 [tell $fileId]

      if { $review_seek_flag == 0 } {
         seek $fileId $review_file_all_offset2 start
      } else {
         seek $fileId $review_file_all_offset1 start
      }

      if { [string match "MOM_before_output" $mom_debug_event_name] } {
         puts $fileId "B $mom_debug_event_name [expr $review_num - 1]"
      } else {
         puts $fileId "E $mom_debug_event_name $review_num"
         incr review_num
      }

      if { $review_seek_flag == 1 } {
         seek $fileId $review_file_all_offset2 start ; # offset file ptr
         set review_seek_flag 0
      }
   }


   if { $mom_debug_done_heading == 0 } { MOM__debug_do_heading }

   set file_all_offset2 [tell $mom_debug_file_all]
   if { $seek_flag == 0 } {
      seek $mom_debug_file_all $file_all_offset2 start
   } else {
      seek $mom_debug_file_all $file_all_offset1 start
   }

   puts $mom_debug_file_all ""
   puts $mom_debug_file_all "--------------------------------------------------"
   puts $mom_debug_file_all "Event $debug_num: $mom_debug_event_name"
   puts $mom_debug_file_all ""

   if { $seek_flag == 1 } {
      seek $mom_debug_file_all $file_all_offset2 start
      set seek_flag 0
   }

   incr debug_num
}

################################################################################
#
# proc:  MOM_before_each_add_var
#
# Description:
#  Gets called each time a variable is loaded
#
################################################################################
proc MOM_before_each_add_var {} \
{
   
   global fileId
   global mom_debug_assign_var
   global mom_debug_done_heading
   global mom_debug_file_all
   global seek_flag
   global file_all_offset1
   global review_seek_flag
   global review_file_all_offset1
   global mom_debug_event_name
   global mom_debug_err_file
   global DEBUG
   if { $DEBUG } { #puts $mom_debug_err_file "Entering MOM_before_each_add_var" }

   if { $mom_debug_done_heading == 0 } { MOM__debug_do_heading }

   if { $review_seek_flag == 0 } {
      set review_file_all_offset1 [tell $fileId]
      puts $fileId "                                                 "
      set review_seek_flag 1
   }

   if { [regexp "mom_o_buffer" $mom_debug_assign_var] == 1 } {
      puts $fileId "O $mom_debug_assign_var"
   } else {
      puts $fileId "V $mom_debug_assign_var"
   }

   if { $seek_flag == 0 } {
      set tmp_str "                                           "
      set file_all_offset1 [tell $mom_debug_file_all]
      puts $mom_debug_file_all $tmp_str
      puts $mom_debug_file_all $tmp_str
      set seek_flag 1
   }

   puts $mom_debug_file_all "Var: $mom_debug_assign_var"
}

################################################################################
#
# proc: MOM_before_load_address
#
# Description:
#  Output to the debug file Address values before events are generated
#
################################################################################
proc MOM_before_load_address {} \
{
   
   global fileId
   global mom_debug_load_address
   global mom_debug_file_all
   global file_all_offset1
   global seek_flag
   global review_file_all_offset1
   global review_seek_flag
   global mom_debug_done_heading
   global mom_debug_err_file
   global DEBUG
   if { $DEBUG } { #puts $mom_debug_err_file "Entering MOM_before_load_address" }

   if { $mom_debug_done_heading == 0 } { MOM__debug_do_heading }

   if { $seek_flag == 0 } {
      set tmp_str "                                           "
      set file_all_offset1 [tell $mom_debug_file_all]
      puts $mom_debug_file_all $tmp_str
      puts $mom_debug_file_all $tmp_str
      set seek_flag 1
   }

   puts $mom_debug_file_all "Address: $mom_debug_load_address"

   if { $review_seek_flag == 0 } {
      set review_file_all_offset1 [tell $fileId]
      puts $fileId "                                  "
      set review_seek_flag 1
   }

   puts $fileId "A $mom_debug_load_address"
}

################################################################################
# proc: MOM_end_debug
#
# Function:
#  Close the output file
#
################################################################################
proc MOM_end_debug {} \
{

   global fileId
   global wish_script
   global proc_data
   global mom_debug_file_all
   global review_data
   global mom_debug_err_file
   global DEBUG
   global my_wish
   global errorInfo
   global mom_debug_output_directory

   if { $DEBUG } { puts $mom_debug_err_file "Entering MOM_end_debug" }

   flush $fileId
   close $fileId
   flush $mom_debug_file_all
   close $mom_debug_file_all

   # Ensure location of data files - Somehow it gets messed up in dev-unit
   cd $mom_debug_output_directory

   if [catch { open $proc_data w } fileId2] \
   {
      if { $DEBUG } { puts $mom_debug_err_file "error opening the file $proc_data " }
   } else \
   {
      if { $DEBUG } { puts $mom_debug_err_file "mom_review.tcl: write $proc_data" }
      foreach WERT  [ lsort [ info procs ]] { puts $fileId2 "$WERT" }
      flush $fileId2
      close $fileId2
   }

   set mom_debug_done_heading 0

   if { $DEBUG } {
      puts $mom_debug_err_file "review_data = $review_data"
      puts $mom_debug_err_file "*** $wish_script exists [file exists $wish_script] ***"
   }

   if { $DEBUG } {
      puts $mom_debug_err_file "Current directory: \"[pwd]\""
   }

   set ier 0
   if [catch { exec $my_wish $wish_script $review_data $proc_data & } res] {
      if { $DEBUG } {
         puts $mom_debug_err_file "+++ NX/Post review tool has failed. $res +++"
      } else {
         MOM_output_to_listing_device "+++ NX/Post review tool has failed. $res +++"
      }
      set ier 1
   }


#  If in UGMANAGER the return value does not seem to come out as 0 even though wish executes successsfully
#  so if this return value is not checked then it will still work ok.


#   if { $ier == 1 } {
#     set my_wish "wish"
#     exec $my_wish $wish_script $review_data $proc_data
#   }

#   MOM_remove_file $review_data $proc_data
   catch { close $mom_debug_err_file }
}

